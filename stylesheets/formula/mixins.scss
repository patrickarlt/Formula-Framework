@mixin leader-and-trailer($size, $lines){
  &.leader {
    @include leader($lines, $size);
  }
  &.trailer {
    @include trailer($lines, $size);
  }
}

@mixin image-replace($path){
  display:block;
  width: image-width($path);
  padding-top: image-height($path);
  height: 0;
  background-image: image-url($path);
  background-repeat: no-repeat;
  overflow:hidden;
}

@mixin size($width, $height){
  width: $width;
  height: $height;
}

@mixin square($size){
  @include size($size, $size);
}

@mixin show {
  display: block !important;
  visibility: visible;  
}

@mixin clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin hide {
  display: none !important;
  visibility: hidden;
}

@mixin visually-hidden { 
  border: 0; clip: 
  rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  &.focusable:active, &.focusable:focus  {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  } 
}

@mixin invisible {
  visibility: hidden;
}

@mixin for-lt-ie9(){
  html.lt-ie9 {
    @content;
  }
}

@mixin for-lt-ie8(){
  html.lt-ie8 {
    @content;
  }
}

@mixin for-ie9(){
  html.ie9 {
    @content;
  }
}

@mixin for-ie8(){
  html.ie8 {
    @content; 
  }
}

@mixin for-ie(){
  html.ie {
    @content;
  }
}

@mixin respond-to($type, $m: max-width) {
  @if $type == handheld {
    @media screen and (max-width: 767px) {
      @content;
    }
  } @else if $type == webkit {
    @media screen and (-webkit-min-device-pixel-ratio: 0) {
      @content;
    }
  } @else if $type == nonhandheld {
    @media screen and (min-width: 769px) {
      @content;
    }
  } @else {
    @media screen and ($m: $type) {
      @content;
    }
  }
}

@mixin retina-display() {
  @media screen and (-webkit-min-device-pixel-ratio : 1.5), screen and (min-device-pixel-ratio : 1.5) {
    @content;
  }
}